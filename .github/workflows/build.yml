name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
     
    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.201
        source-url: https://nuget.pkg.github.com/dogguts/index.json
      env:
        NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
          
    - name: Runtime environment
      shell: bash
      env:
        WORKSPACE: ${{ github.workspace }}
      run: |
        echo ::set-env name=GH_SHORT_SHA::"`git rev-parse --short "$GITHUB_SHA"`"
        mv github_nuget.config nuget.config
        sed -i.bak 's/GITHUB_TOKEN/${{ secrets.GITHUB_TOKEN }}/g' nuget.config; rm nuget.config.bak
    
    - name: Build
      run: dotnet build aeon.sln --configuration Release
    
    - name: Test
      run: dotnet test tests/Repository.Test.Integration --logger "trx;LogFileName=Repository.Test.Integration.trx"
  
    - name: Publish Test results to Artifacts
      uses: actions/upload-artifact@master
      with:
        name: Repository.Test.Integration.trx
        path: tests/Repository.Test.Integration/TestResults/Repository.Test.Integration.trx
    
    - name: Run Samples
      run: |
        find samples/ -name *.csproj -type f -exec ls -l {} \; -execdir dotnet run {} +

    - name: Pack
      run: |
        dotnet pack src/Aeon.Core.Repository --configuration Release --include-symbols --include-source -p:IncludeSymbols=true -p:SymbolPackageFormat=snupkg -o packages /p:VersionSuffix=$GITHUB_WORKFLOW-$GITHUB_RUN_NUMBER-$GH_SHORT_SHA /p:PackageProjectUrl=https://github.com/dogguts/aeon/tree/$GITHUB_SHA
        dotnet pack src/Aeon.Core.Repository.Extensions --configuration Release --include-symbols --include-source -p:IncludeSymbols=true -p:SymbolPackageFormat=snupkg -o packages /p:VersionSuffix=$GITHUB_WORKFLOW-$GITHUB_RUN_NUMBER-$GH_SHORT_SHA /p:PackageProjectUrl=https://github.com/dogguts/aeon/tree/$GITHUB_SHA

    - name: Publish packages to GPR
      run: | 
        ls packages/*.*nupkg
        dotnet nuget push 'packages/*.nupkg' --skip-duplicate --source "github" -k ${{secrets.GITHUB_TOKEN}}
  documentation:
    runs-on: ubuntu-latest
     
    steps:
    - uses: actions/checkout@v2
    - uses: nuget/setup-nuget@v1
      with:
       nuget-version: '5.x'
    - name: Test nuget
      run: |
        pwd
        ls -al
        nuget install docfx.console -version 2.51.0
        ls -al
        docfx.console.2.51.0/tools/docfx.exe ./docs/docfx.json
        ls docfx
        ls docfx/_site
        
        
        
        
